>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> empty_list = []
>>> empty_lists = [[], [], []]
>>> not_list = [42, [2, 5], [1, 2, 3]]
>>> not_all_num = [["blue", 1, 2], [3, 4, "f"], ["23b", 5, 6]]
>>> diff_len = [[1,3,3,3], [3,5,1,2,5], [2,5,8]]


>>> print(matrix_divided(empty_list, 2))
[]

>>> print(matrix_divided(empty_lists, 3))
[[], [], []]

>>> print(matrix_divided(not_list, 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided(not_all_num, 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided(diff_len, 3))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> print(matrix_divided(matrix, "not a number"))
Traceback (most recent call last):
TypeError: div must be a number
